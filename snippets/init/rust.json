{
  "ractor_Actor": {
    "prefix": [
      "actor"
    ],
    "body": [
      "#[async_trait]",
      "impl Actor for ${1} {",
      "   type State = ${2};",
      "   type Msg = ${3};",
      "   type Arguments = ${4};",
      "   async fn pre_start(&self, _myself: ActorRef<Self::Msg>, _arguments: Self::Arguments) -> Result<Self::State, ActorProcessingErr> {",
      "       ${5}",
      "   }",
      "",
      "async fn handle(",
      "    &self,",
      "    _myself: ActorRef<Self::Msg>,",
      "    message: Self::Msg,",
      "    _state: &mut Self::State,",
      ") -> Result<(), ActorProcessingErr> {",
      "       ${6}",
      "}",
      "",
      "async fn handle_supervisor_evt(",
      "    &self,",
      "    _myself: ActorRef<Self::Msg>,",
      "    message: SupervisionEvent,",
      "    _state: &mut Self::State,",
      ") -> Result<(), ActorProcessingErr> {",
      "       ${7}",
      "}",
      "}"
    ],
    "description": "rust ractor Class"
  }
}
