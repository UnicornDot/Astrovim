---@type LazySpec
return {
  { "stevearc/aerial.nvim", enabled = true },
--   {
--     "hedyhli/outline.nvim",
--     specs = {
--       {
--         "AstroNvim/astrocore",
--         opts = function(_, opts)
--           local maps = opts.mappings maps.n["<Leader>lS"] = { function() vim.cmd [[Outline]] end, desc = "Toggle Outline" } end,
--       },
--     },
--     cmd = "Outline",
--     opts = function()
--       local defaults = require("outline.config").defaults
--       local opts = {
--         symbols = {
--           icons = {},
--           filter = {
--             default = {
--               "Class",
--               "Constructor",
--               "Enum",
--               "Field",
--               "Function",
--               "Interface",
--               "Method",
--               "Module",
--               "Namespace",
--               "Package",
--               "Property",
--               "Struct",
--               "Trait",
--             },
--             markdown = false,
--             help = false,
--             -- you can specify a different filter for each filetype
--             lua = {
--               "Class",
--               "Constructor",
--               "Enum",
--               "Field",
--               "Function",
--               "Interface",
--               "Method",
--               "Module",
--               "Namespace",
--               -- "Package", -- remove package since luals uses it for control flow structures
--               "Property",
--               "Struct",
--               "Trait",
--             },
--           },
--         },
--         keymaps = {
--           up_and_jump = "<up>",
--           down_and_jump = "<down>",
--         },
--       }
--       for kind, symbol in pairs(defaults.symbols.icons) do
--         opts.symbols.icons[kind] = {
--           icon = require("icons.lspkind")[kind] or symbol.icon,
--           hl = symbol.hl,
--         }
--       end
--       return opts
--     end,
--   },
}
